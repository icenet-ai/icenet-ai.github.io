name: Deploy to GitHub Pages

on:
  # Trigger the workflow every time you push to the `main` branch
  # Using a different branch name? Replace `main` with your branchâ€™s name
  push:
    branches: [ main ]
  # Allows you to run this workflow manually from the Actions tab on GitHub.
  workflow_dispatch:

# Cancel any previous in-progress actions
concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

# Allow this job to clone the repo and create a page deployment
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout this repository using git
        uses: actions/checkout@v4
      - uses: mamba-org/setup-micromamba@v2
        with:
          init-shell: >-
            bash
          post-cleanup: 'all'
      - name: Fetch icenet and install repository and dependencies for docs
        run: |
          micromamba install -y -c conda-forge netcdf4=1.6.0
          eval "$(micromamba shell hook --shell bash)"
          micromamba activate base
          git clone https://github.com/icenet-ai/icenet.git
          cd icenet
          git submodule set-url icenet-notebooks https://github.com/icenet-ai/icenet-notebooks.git
          git submodule update --init
          pip install .
          cd docs
          pip install -r requirements.txt
          make html
          cd ../..
      - name: Copy Sphinx docs across
        run: |
          cp -r icenet/docs/_build/html/ public/docs/
      - name: Install, build, and upload your site
        uses: withastro/action@v3
        # with:
          # path: . # The root location of your Astro project inside the repository. (optional)
          # node-version: 20 # The specific version of Node that should be used to build your site. Defaults to 20. (optional)
          # package-manager: pnpm@latest # The Node package manager that should be used to install dependencies and build your site. Automatically detected based on your lockfile. (optional)

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
